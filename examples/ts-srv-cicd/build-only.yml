# Example: Build-only pipeline for container registry
# This example shows how to only build and push images without deploying

name: Build and Push Images

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  schedule:
    # Build nightly at 2 AM UTC
    - cron: "0 2 * * *"

jobs:
  build-images:
    name: Build Docker Images
    uses: Traventia/ci-templates/.github/workflows/ts-srv-cicd.yml@main
    with:
      # Skip deployment, only build
      skip_deploy: true

      # Optionally skip integration tests for faster builds
      skip_integration_tests: true

      # Use production environment for app identification
      environment: "production"

      node_version: "20.x"
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_CI_BUCKET_REGION: ${{ secrets.AWS_CI_BUCKET_REGION }}
      AWS_CI_BUCKET: ${{ secrets.AWS_CI_BUCKET }}
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  # Example of using the output from the workflow
  notify-build-completion:
    name: Notify Build Completion
    needs: [build-images]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify about built apps
        run: |
          echo "Built applications: ${{ needs.build-images.outputs.apps_to_deploy }}"
          echo "Build status: ${{ needs.build-images.result }}"
